apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: flask-app
spec:
  replicas: 2  # Better to have at least 2 for high availability
  selector:
    matchLabels:
      app: flask-app
  strategy:
    type: RollingUpdate  # Better than Recreate for zero downtime
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: ${DOCKER_USERNAME}/flask-app:${IMAGE_TAG}  # Will be replaced during deployment
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_ENV
              value: "production"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: flask-app
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 5000
      protocol: TCP
  selector:
    app: flask-app
---
apiVersion: v1
kind: Namespace
metadata:
  name: flask-app